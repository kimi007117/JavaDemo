apply plugin: 'com.android.application'

apply from: "${getRootDir()}/gradle/jacoco.gradle"

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.noe.rxjava"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a"
            }
        }
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "2g"
    }

    //签名使用
    signingConfigs {
        appkey {
            storeFile file("${keyStoreDir}/${keyStoreName}")
            storePassword "${keyStorePassword}"
            keyAlias "${keyStoreAlias}"
            keyPassword "${keyStoreAliasPassword}"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.appkey
            zipAlignEnabled true //混淆后的zip优化，默认为true，可不写。当不显示配置为true时，不会生成unaligned.apk
            shrinkResources true // 去除未使用资源
            minifyEnabled true // 混淆、去除未使用类
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            signingConfig signingConfigs.appkey
            shrinkResources false // 去除未使用资源
            minifyEnabled false  // 代码混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = true
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

afterEvaluate {
//    BuildScripts.indexMainDexClassList(project,52000)
}

//BuildScripts.patchKeepSpecs(this.class.classLoader)

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation(rootProject.ext.dependencies["vlayout"]) {
        transitive = true //开启依赖性传递，自动依赖包
    }
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["smooth-app-bar-layout"]
    implementation rootProject.ext.dependencies["systembartint"]
    //沉浸式状态栏
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["adapter-rxjava"]
    implementation rootProject.ext.dependencies["converter-jackson"]
    implementation rootProject.ext.dependencies["picasso"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["glide-transformations"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation rootProject.ext.dependencies["dagger"]
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["timber"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["arouter-api"]
    implementation rootProject.ext.dependencies["blockcanary-android"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.cjj.materialrefeshlayout:library:1.3.0'
    implementation 'com.dinuscxj:recyclerrefreshlayout:2.0.3'
    implementation 'com.jcodecraeer:xrecyclerview:1.3.2'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.15'
    implementation 'android.arch.work:work-runtime:1.0.0'
    implementation project(':UILib')
    implementation project(':Corelib')
//    implementation 'com.wuba.certify:v7:1.6.0'
}
